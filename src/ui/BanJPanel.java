/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import DAO.BanDAO;
import DAO.ChiTietHoaDonDAO;
import DAO.HoaDonDAO;
import DAO.ThanhToanDAO;
import Entity.Ban;
import Entity.ChiTietHoaDon;
import Entity.HoaDon;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import utils.Auth;
import java.sql.Time;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.sql.Timestamp;
import java.time.temporal.ChronoUnit;

/**
 *
 * @author ADMIN
 */
public class BanJPanel extends javax.swing.JPanel implements ActionListener, Runnable {
// khai báo biến
    // tạo danh sách bàn

    private static List<Ban> Banlst;
    // tạo mảng button để gán vào mảng bàn bao nhiêu bàn là bấy nhiêu button;
    private static JButton[] btn;
    // cho phép cập nhật lai bàn liên tục 
    private static boolean runtime = true;
    // cập nhật giao diện liên tục mà không làm đơ chương trình
    // luồng chạy //với ctrinh chính
    private int gio = 0, phut = 0, giay = 0;
    private Thread t;

    public BanJPanel() {
        initComponents();
        readAllBan();
        t = new Thread(this);
        t.start(); // gọi hàm run mỗi 2s lại reset

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnlChinh = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnQuanLyBan = new javax.swing.JButton();

        javax.swing.GroupLayout pnlChinhLayout = new javax.swing.GroupLayout(pnlChinh);
        pnlChinh.setLayout(pnlChinhLayout);
        pnlChinhLayout.setHorizontalGroup(
            pnlChinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1162, Short.MAX_VALUE)
        );
        pnlChinhLayout.setVerticalGroup(
            pnlChinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 681, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(pnlChinh);

        jPanel4.setBackground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 84, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(0, 255, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 84, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 84, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Bàn Dang Sử Dụng");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Bàn Trống");

        jButton1.setText("Chuyển Bàn");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnQuanLyBan.setText("Quản Lý Bàn");
        btnQuanLyBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuanLyBanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                        .addComponent(btnQuanLyBan))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jLabel2))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel1)))
                        .addGap(81, 81, 81)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnQuanLyBan)
                            .addComponent(jButton1))))
                .addContainerGap(184, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ChuyenBanJDialog chuyenban = new ChuyenBanJDialog(new javax.swing.JFrame(), true);
        chuyenban.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnQuanLyBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuanLyBanActionPerformed
        if (Auth.user.isVaiTro()) {

            ThemBanJDialog themBan = new ThemBanJDialog(new javax.swing.JFrame(), true);
            themBan.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "bạn không có quyền sử dụng chức năng này");
            btnQuanLyBan.setEnabled(false);
        }
    }//GEN-LAST:event_btnQuanLyBanActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnQuanLyBan;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlChinh;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        for (int i = 0; i < Banlst.size(); i++) {
            if (e.getActionCommand().equals(String.valueOf(Banlst.get(i).getID()))) {
                if (Banlst.get(i).isTrangThai()) {
                    // trạng thái true đưa ra câu hỏi 
                    int luachon = JOptionPane.showConfirmDialog(this, "Bạn có muốn mở bàn không?", "Xác Nhận", JOptionPane.YES_NO_OPTION);
                    if (luachon == JOptionPane.YES_OPTION) {
                        // khi mở bàn tạo một hóa đơn mới 
                        HoaDon hoaDon = new HoaDon();
                        hoaDon.setNguoiTao(Auth.user.getTenNhanVien());
                        hoaDon.setTenKhachHang("khách lạ");
                        hoaDon.setNgayTao(new Date());
                        hoaDon.setTongTien(0);
                        hoaDon.setTrangThai(false);
                        hoaDon.setIdBan(Banlst.get(i).getID());
                        hoaDon.setIdKhachHang(1);

                        System.out.println("ID Nhân viên đang đăng nhập: " + Auth.user.getID());
                        hoaDon.setIdNhanVien(Auth.user.getID());
                        // add hóa đơn vào db
                        HoaDonDAO hd = new HoaDonDAO();
                        int ketqua = hd.CreateHoaDon(hoaDon);
                        if (ketqua == 1) {
                            // tạo một bàn mới

                            Ban ban = new Ban();
                            ban.setID(Banlst.get(i).getID());
                            ban.setTrangThai(false);
                            // create thueban
                           
                            hoaDon = ThanhToanDAO.readHoaDon(Banlst.get(i).getID());
                            ChiTietHoaDon hdct = new ChiTietHoaDon();
                            Ban bann = BanDAO.getBanByID(Banlst.get(i).getID());
                            hdct.setTen("Thuê Bàn");
                            System.out.println("giá bàn" + bann.getGia());
                            hdct.setGia(bann.getGia());
                            hdct.setSoLuong(1);
                            hdct.setThanhTien(0);
                            hdct.setIDDichVu(1);
                          //  HoaDon hoadon = HoaDonDAO.readIDHD(Banlst.get(i).getID());
                           int IdHD = hoaDon.getId();
                           
                            hdct.setIDHoaDon(IdHD);

                            // Thêm vào DB
                            ChiTietHoaDonDAO cthd = new ChiTietHoaDonDAO();
                            cthd.createHDCT(hdct);
                            // update trạng thái bàn lại trong db
                            BanDAO updateban = new BanDAO();
                            updateban.UpdateTrangThaiban(ban);
                            int IDBan = Banlst.get(i).getID();

                            ThanhToanJDialog thanhToan = new ThanhToanJDialog(new javax.swing.JFrame(), true, IDBan);
                            thanhToan.setVisible(true);
                        } else {
                            JOptionPane.showMessageDialog(this, "tạo hóa đơn thất bại");
                        }
                    }
                } else {
                    int IDBan = Banlst.get(i).getID();

                    ThanhToanJDialog thanhToan = new ThanhToanJDialog(new javax.swing.JFrame(), true, IDBan);
                    thanhToan.setVisible(true);
                }
            }
        }

    }

    @Override
    public void run() {
        while (runtime) {
            try {
                // xóa toàn bộ pnl
                pnlChinh.removeAll();
                // load lại bàn
                readAllBan();
                // update lại giao diện sau khi load bàn
                updateUI();
                // nghỉ 2s  rồi load lại
                Thread.sleep(2000);
            } catch (InterruptedException ex) {
                System.out.println("Có lỗi ở: " + ex.getMessage());
            }

        }
    }

    public JButton TaoButton(String TenButton) {
        // tạo nút và gán sự kiện
        JButton btn = new JButton(TenButton);
        btn.addActionListener(this);
        return btn;
    }

    public void readAllBan() {
        Banlst = BanDAO.getAllBan();
        pnlChinh.setLayout(new GridLayout(5, 5, 40, 40));
        btn = new JButton[Banlst.size()];// set btn bằng đúng số bàn trong csdl
        for (int i = 0; i < Banlst.size(); i++) {
            // tạo nút theo thứ tự trong csdl
            btn[i] = TaoButton(Banlst.get(i).getID() + "");
            // set kích thước nút
            btn[i].setPreferredSize(new Dimension(200, 100));
            // nhúng icon vào nút
            btn[i].setIcon(new ImageIcon(getClass().getResource("/icon/banbida.jpg")));
            if (Banlst.get(i).isTrangThai()) {
                // set trạng thái cho bàn xanh là trống đỏ là có ng dùng
                btn[i].setBackground(Color.green);
            } else {
                btn[i].setBackground(Color.red);
            }
            // set số thứ tự bàn
            // set thêm giờ chơi
            // sử dụng timer để cập nhật giờ phút giây

            btn[i].setText(Banlst.get(i).getID() + "");
            // set text nằm giưa icon
            btn[i].setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            pnlChinh.add(btn[i]);
        }
    }

}
